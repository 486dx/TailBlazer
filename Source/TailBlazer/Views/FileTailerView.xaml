<UserControl x:Class="TailBlazer.Views.FileTailerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TailBlazer.Views"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:infrastucture="clr-namespace:TailBlazer.Infrastucture"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:fileHandling="clr-namespace:TailBlazer.Domain.FileHandling;assembly=TailBlazer.Domain"
             x:Name="Control"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:FileTailerViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="400" d:DesignWidth="400">

    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.listbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
                <ResourceDictionary Source="../Themes/Generic.xaml"></ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

            <infrastucture:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <infrastucture:NotEqualsToVisibilityConverter x:Key="NotEqualsToVisibilityConverter"/>
            <system:Int32 x:Key="Zero">0</system:Int32>
            <system:Int32 x:Key="One">1</system:Int32>


            <Style TargetType="{x:Type Button}" x:Key="SettingsButtonStyle" BasedOn="{StaticResource MaterialDesignMenuCommandButtonStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{TemplateBinding Background}"/>
                                <local:SettingsIcon  Width="12" Height="12"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush }" />
                <Setter Property="Width" Value="22" />
                <Setter Property="Height" Value="22" />
                <Setter Property="Margin" Value="4 0 2 0" />
                <Setter Property="Opacity" Value=".75" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush }" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="CloseButtonStyle" BasedOn="{StaticResource MaterialDesignMenuCommandButtonStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{TemplateBinding Background}"/>

                                <Path x:Name="Path"
                                      Data="M0.5,71 L70,0.5 M0.5,1 L70,70.5" 
                                      Width="6" Height="6"
                                      Stretch="Uniform"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="1.5"
                                      StrokeStartLineCap="Square" 
                                      StrokeEndLineCap="Square"
                                      SnapsToDevicePixels="True" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="12" />
                <Setter Property="Margin" Value="4 0 2 0" />
                <Setter Property="Opacity" Value=".75" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="filterListBoxStyle" TargetType="{x:Type ListBox}">

                <Setter Property="BorderBrush" Value="{StaticResource MaterialDesignTextBoxBorder}"/>
              
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type ListBox}">

                            <Border x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
          
                        CornerRadius="8" 
                         BorderThickness="4 0 0 0" >
                                
                                <ScrollViewer x:Name="ScrollViewer" 
                                              Margin="4 0 0 0"
            		                            VerticalScrollBarVisibility="Auto"
            		                            HorizontalScrollBarVisibility="Auto"
            		                            CanContentScroll="True"
            		                            Padding="{TemplateBinding Padding}"
            		                            Background="{TemplateBinding Background}" 
            		                            BorderBrush="Transparent" BorderThickness="0" 
            		                            IsTabStop="False">
                                <ItemsPresenter/>
                            </ScrollViewer>
                                
                        </Border>
                        <ControlTemplate.Triggers>


                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter  Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                </Trigger>

                            </ControlTemplate.Triggers>

                    </ControlTemplate>
                    </Setter.Value>
                </Setter>


                
            </Style>

        </ResourceDictionary>
    </Control.Resources>

    <Grid>
        <ProgressBar
                Visibility="{Binding IsLoading.Value, Converter={StaticResource BooleanToVisibilityConverter}}"
                Style="{StaticResource TailBlazerCircularProgressBar}" 
                MinWidth="75"
                MinHeight="75"
                Value="50"
                IsIndeterminate="True"/>

        <Grid  
            Visibility="{Binding IsLoading.Value, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" 
            Margin="-4 0 -4 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
            </Grid.RowDefinitions>

            <Grid Margin="0 4 0 4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Viewbox Width="24" Height="24" Margin="4 0 0 0">
                    <Canvas Width="24" Height="24">
                        <Path Data="M3,2H21V2H21V4H20.92L15,9.92V22.91L9,16.91V9.91L3.09,4H3V2M11,16.08L13,18.08V9H13.09L18.09,4H5.92L10.92,9H11V16.08Z" 
                                  Fill="{Binding ElementName=SearchTextBox, Path=BorderBrush}" />
                    </Canvas>
                </Viewbox>

                <TextBox Grid.Column="1" x:Name="SearchTextBox" 
                        wpf:TextFieldAssist.Hint="{Binding SearchHint.Value}"          
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        VerticalAlignment="Center"
                        MinWidth="125">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding KeepSearchCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>


                <TextBlock     Margin="4 0 0 0" Grid.Column="2"
                               Opacity="0.56"

                               Width="43"
                               TextAlignment="Center"
                              TextWrapping="Wrap"
                            Visibility="{Binding SearchCollection.Count, Converter={StaticResource NotEqualsToVisibilityConverter}, ConverterParameter={StaticResource One}}"
                            VerticalAlignment="Center"
                            Text="Switch Results"></TextBlock>


                <ListBox Grid.Column="3" Margin="4 2 0 2" 
                      
                         VerticalAlignment="Stretch"
                         Visibility="{Binding SearchCollection.Count, Converter={StaticResource NotEqualsToVisibilityConverter}, ConverterParameter={StaticResource One}}"
                    SelectedItem="{Binding SearchCollection.Selected}"
                    ItemsSource="{Binding SearchCollection.Items}" 
                     Style="{DynamicResource filterListBoxStyle}">

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type local:SearchViewModel}">
                                <Grid x:Name="Selection" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition  Width="Auto"/>
                                        <ColumnDefinition  Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Margin="4 0 0 0">
                                            <Run FontSize="12"
                                                FontWeight="Bold"
                                                BaselineAlignment="Bottom"
                                                Text="{Binding Text, Mode=OneWay}"/>
                                    
                                            <Run BaselineAlignment="Bottom" Text="{Binding  CountText}"/>
                                    </TextBlock>

                                    <ProgressBar  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                            Margin="0 4 0 0"            
                                            Width="{Binding ElementName=Selection, Path=Width}"    
                                            Orientation="Horizontal"
                                            VerticalAlignment="Bottom"
                                            Visibility="{Binding Searching, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Value="{Binding SegmentsSearched}"
                                            Maximum="{Binding Segments}"
                                            Minimum="0"
                                            IsIndeterminate="False"/>


                                    <Button Visibility="{Binding SearchType, Converter={StaticResource EqualityToVisibilityConverter},ConverterParameter={x:Static fileHandling:SearchType.User}}"
                                        Grid.Row="0"  Grid.Column="2"
                                        ToolTip="{Binding RemoveTooltip}"
                                        Margin="4 0 0 4"
                                        VerticalAlignment="Center"
                                        Command="{Binding RemoveCommand}"
                                        Style="{StaticResource CloseButtonStyle}"/>
                                </Grid>
                            </DataTemplate>

                        </ListBox.ItemTemplate>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource  MaterialDesignListBoxItem}">
                                <Style.Setters>
                                    <Setter Property="Padding" Value="4 0 4 0"/>
                                    <Setter Property="Height" Value="36"/>
                                </Style.Setters>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>


                <!--</Border>-->

                <Button Grid.Column="4" 
                        Visibility="{Binding SearchCollection.Count, Converter={StaticResource NotEqualsToVisibilityConverter}, ConverterParameter={StaticResource One}}"
                        HorizontalAlignment="Left"
                        ToolTip="Search options"
                        Height="14" Width="14"
                        VerticalAlignment="Center"
                        Margin="2 2 0 2"  
                        Style="{StaticResource SettingsButtonStyle}"/>

                <StackPanel    
                    VerticalAlignment="Center"
                    Grid.Column="5" Margin="4 0 4 0" Orientation="Vertical">

                    <CheckBox Visibility="{Binding }"
                        HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          IsChecked="{Binding AutoTail}"
                          Margin="4 0 4 0"
                          >Follow tail</CheckBox>

                    <CheckBox Visibility="{Binding CanViewInline.Value, Converter={StaticResource BooleanToVisibilityConverter}}"
                        HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          IsChecked="{Binding ShowInline}"
                          Margin="4 0 4 0"
                          >Show in-line</CheckBox>


                </StackPanel>


            </Grid>


            <ListBox   Grid.Row="1"
                 ItemsSource="{Binding Lines}" 
                SelectedItem="{Binding SelectedItem}"
                 FontFamily="Consolas"
                 SelectionMode="Extended"
                 infrastucture:ListBoxHelper.SelectionMonitor="{Binding SelectionMonitor}" >

                <ListBox.Template>
                    <ControlTemplate>
                        <ScrollViewer x:Name="ScrollViewer" 
                                        VerticalScrollBarVisibility="Auto"
                                        HorizontalScrollBarVisibility="Auto"
                                        CanContentScroll="True"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="Transparent" BorderThickness="0" 
                                        IsTabStop="False">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </ListBox.Template>

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <local:VirtualScrollPanel ItemHeight="22"
                                                ScrollReceiver="{Binding}"  
                                                StartIndex="{Binding FirstIndex}"
                                                TotalItems="{Binding LatestCount.Value}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>


                <ListBox.InputBindings>
                    <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyToClipboardCommand}"/>
                </ListBox.InputBindings>

                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="_Copy" Command="{Binding CopyToClipboardCommand}">
                            <MenuItem.Icon>
                                <Viewbox Width="16" Height="16">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" 
                                              Fill="{DynamicResource MaterialDesignBody}" />
                                    </Canvas>
                                </Viewbox>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>

                <ListBox.ItemTemplate>


                    <DataTemplate DataType="{x:Type local:LineProxy}">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding Index, Mode=OneWay}" Visibility="Collapsed" Opacity="0.55" MinWidth="25"/>
                            <infrastucture:SearchableTextControl Grid.Column="1" 
                                                             Margin="6 0 0 0"   
                                                            IsHighlight="{Binding ElementName=Control, Path=DataContext.ShouldHightlightMatchingText.Value}"  
                                                            SearchText="{Binding ElementName=Control,Path=DataContext.HightlightText.Value}"
                                                            IsMatchCase="False"
                                                            HighlightBackground="{StaticResource SecondaryAccentBrush}"
                                                            HighlightForeground="{StaticResource SecondaryAccentForegroundBrush}"
                                                            Text="{Binding Text}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>


                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource  MaterialDesignListBoxItem}">
                        <Style.Setters>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Height" Value="22"/>
                        </Style.Setters>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRecent}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Background).(SolidColorBrush.Color)" 
                                                                               FromBrush="{StaticResource SecondaryAccentBrush}" 
                                                                               Duration="0:0:5"/>
                                            <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Foreground).(SolidColorBrush.Color)" 
                                                                               ToBrush="{StaticResource SecondaryAccentForegroundBrush}" 
                                                                               Duration="0:0:5"/>
                                        </Storyboard>
                                    </BeginStoryboard>

                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>

            </ListBox>

            <GridSplitter Grid.Row="2"
                          Height="5" 
                          ResizeDirection="Rows"
                          Visibility="{Binding Path=DataContext.InlineViewerVisible.Value, ElementName=Control,Converter={StaticResource BooleanToVisibilityConverter}}"
                          Background="{StaticResource PrimaryHueMidBrush}"
                          BorderThickness="1" HorizontalAlignment="Stretch"/>

            <local:InlineView 
                VerticalAlignment="Stretch"
                Visibility="{Binding Path=DataContext.InlineViewerVisible.Value, ElementName=Control,Converter={StaticResource BooleanToVisibilityConverter}}"
                DataContext="{Binding InlineViewer}"
                Grid.Row="3" />

            <Grid    Grid.Row="4"
              Margin = "0 0 0 -4"       
            Background="{StaticResource PrimaryHueMidBrush}">


                <Grid.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Opacity" Value="0.8"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidForegroundBrush}"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Margin="4 2 6 2"
                     Orientation="Horizontal" 
                     Visibility="Collapsed"       
                     HorizontalAlignment="Left">

                    <TextBlock Text="DEBUGGING INFO:"/>

                    <TextBlock  
                        Margin="4 0 0 0"
                        Text="{Binding SelectedItemsCount.Value,StringFormat='\Selected Items={0} '}"
                        VerticalAlignment="Center"/>



                    <TextBlock  
                        Margin="4 0 0 0"
                       Text="{Binding FirstIndex,StringFormat='\First Index={0}'}"
                        VerticalAlignment="Center"/>

                    <TextBlock  
                        Margin="4 0 0 0"
                        Text="{Binding PageSize,StringFormat='\Page Size={0}'}"
                        VerticalAlignment="Center"/>

                </StackPanel>

                <StackPanel 
                    Margin="4 2 4 2"
                    Grid.Column="1"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                    <TextBlock  
                        Margin="4 0 0 0"
                        Text="{Binding  Count.Value,StringFormat='Total lines: {0}'}"
                        VerticalAlignment="Center"/>


                    <TextBlock Margin="4 0 0 0" Text="{Binding FileSizeText.Value}" />
                </StackPanel>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
