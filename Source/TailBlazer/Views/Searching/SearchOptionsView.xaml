<UserControl x:Class="TailBlazer.Settings.SearchOptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:searching="clr-namespace:TailBlazer.Views.Searching"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:controls="clr-namespace:TailBlazer.Controls"
             mc:Ignorable="d" 
            TextElement.Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=(TextElement.Foreground)}"
             Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=Background}"
             d:DataContext="{d:DesignInstance searching:SearchOptionsViewModel}"
             d:DesignHeight="300">

    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.checkbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.popupbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/Buttons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/ToggleButtons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/TextBoxes.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/Dragable.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Control.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition  Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <TextBlock 
                Margin="6,8,0,0"
                FontSize="16"
                FontWeight="DemiBold"
                Text="Search and Highlight Options"/>

        <Grid Grid.Row="1" Height="250" Width="405" Margin="8">
            <Grid.RowDefinitions>
                <RowDefinition  Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>


                <ToggleButton Margin="2 0 0 0"
                                   Padding="2,2,2,-2"
                                   Width="32" 
                                   IsChecked="{Binding SearchHints.UseRegex}">

                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource  SearchToggleStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchHints.IsValid.Value.IsValid}" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource ValidationErrorBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <!--<TextBox Grid.Column="1" 
                            Text="{Binding SearchHints.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             wpf:TextFieldAssist.Hint="{Binding SearchHints.IsValid.Value.Message}" 
                            VerticalAlignment="Center"
                            wpf:ValidationAssist.UsePopup="False"
                            Style="{StaticResource FloatingHintAndErrorTextBox}"
                            Validation.ErrorTemplate="{StaticResource BorderOnlyValidationErrorTemplate}" 
                            MinWidth="180">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SearchHints.AddSearchCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>-->


                <TextBox Grid.Column="1" 
                            Text="{Binding SearchHints.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             wpf:TextFieldAssist.Hint="{Binding SearchHints.IsValid.Value.Message}" 
                            VerticalAlignment="Center"
                            wpf:ValidationAssist.UsePopup="False"
                            Style="{StaticResource FloatingHintAndErrorTextBox}"
                            Validation.ErrorTemplate="{StaticResource BorderOnlyValidationErrorTemplate}" 
                            MinWidth="180">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SearchHints.AddSearchCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>

            </Grid>
            
            <dragablz:DragablzItemsControl  Grid.Row="1" 
                                                ItemContainerStyle="{StaticResource DragableItem}"
                                                HorizontalContentAlignment="Stretch"
                                                PositionMonitor="{Binding PositionMonitor}"
                                                ItemsSource="{Binding Data}">

                <dragablz:DragablzItemsControl.ItemsOrganiser>
                    <dragablz:VerticalOrganiser />
                </dragablz:DragablzItemsControl.ItemsOrganiser>

                <dragablz:DragablzItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type searching:SearchOptionsProxy}">

                        <Grid Margin="4 4 4 4" x:Name="Row">
                            <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="22"/>
                                    <ColumnDefinition Width="75"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                            <controls:SearchResultIndicator 
                                    Padding="2" 
                                    Margin="4 0 0 0" 
                                    Foreground="{Binding HighlightHue.BackgroundBrush}"
                                    BorderBrush ="{x:Null}"
                                    BorderThickness="0"
                                    Status="{Binding Status}"                
                                    VerticalAlignment="Center"/>

                                <TextBlock Padding="2" Margin="4 0 0 0" x:Name="Label" Grid.Column="1" 
                                       Foreground="{Binding HighlightHue.ForegroundBrush}"
                                       Background="{Binding HighlightHue.BackgroundBrush}"
                                       Text="{Binding Text}"
                                        VerticalAlignment="Center"/>

                            <wpf:PopupBox Grid.Column="2">
                                <wpf:PopupBox.ToggleContent>
                                    <wpf:PackIcon Kind="FormatPaint" 
                                            Margin="4 0 4 0" Width="14" Height="14"
                                            Foreground="{DynamicResource PrimaryHueMidBrush}" />
                                </wpf:PopupBox.ToggleContent>

                                    <ItemsControl ItemsSource="{Binding Hues}" 
                                                  Margin="4"
                                                  Background="Transparent">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Style="{StaticResource MaterialDesignRaisedButton}"
                                                        BorderBrush="{DynamicResource GrayBrush2}"
                                                        BorderThickness="0"
                                                        wpf:ShadowAssist.ShadowDepth="Depth2"
                                                        Command="{Binding ElementName=Row,Path=DataContext.HighlightCommand}"
                                                        CommandParameter="{Binding}"
                                                        Margin="2">
                                                    <Button.Background>
                                                        <SolidColorBrush Color="{Binding Background, Mode=OneTime}" />
                                                    </Button.Background>

                                                    <TextBlock Text="{Binding ElementName=Label,Path=Text}" Margin="2">
                                                        <TextBlock.Foreground>
                                                            <SolidColorBrush Color="{Binding Foreground, Mode=OneTime}" />
                                                        </TextBlock.Foreground>
                                                    </TextBlock>
                                                </Button>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>

                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="4"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                            </wpf:PopupBox>

                            <CheckBox Margin="4 0 0 0" Grid.Column="3" 
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding Filter}" 
                                      Content="Filter"/>
                                
                                <CheckBox Margin="4 0 0 0" Grid.Column="4" 
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding Highlight}" 
                                      Content="Highlight"/>

                                <CheckBox Margin="4 0 0 0" Grid.Column="5" 
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding IgnoreCase}" 
                                      Content="Ignore Case"/>


                                <Button Margin="8 0 6 0"
                                        Grid.Column="6" 
                                        ToolTip="{Binding RemoveTooltip}"
                                        VerticalAlignment="Center"
                                        Command="{Binding RemoveCommand}"
                                        Style="{StaticResource CloseButtonStyle}"/>
                            </Grid>

                        </DataTemplate>
                    </dragablz:DragablzItemsControl.ItemTemplate>
                </dragablz:DragablzItemsControl>

            <Button  Grid.Row="2" IsDefault="True"
                 HorizontalAlignment="Right"
                 Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}">
                Finished
            </Button>
        </Grid>
    </Grid>
</UserControl>
