<UserControl x:Class="TailBlazer.Views.Tail.FileTailerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TailBlazer.Views"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:infrastucture="clr-namespace:TailBlazer.Infrastucture"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:search="clr-namespace:TailBlazer.Domain.FileHandling.Search;assembly=TailBlazer.Domain"
             xmlns:controls="clr-namespace:TailBlazer.Controls"
             xmlns:searching="clr-namespace:TailBlazer.Views.Searching"
             xmlns:tail="clr-namespace:TailBlazer.Views.Tail"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
            Background="{DynamicResource MaterialDesignPaper}"
             x:Name="Control"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance tail:FileTailerViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="400" d:DesignWidth="400">

    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.listbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.togglebutton.xaml" />

                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/ProgressBar.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/Buttons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/ToggleButtons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/TextBoxes.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <infrastucture:CheckedToLengthConverter TrueValue="*" FalseValue="*" x:Key="c1" />
            <infrastucture:CheckedToLengthConverter TrueValue="175" FalseValue="0" x:Key="c2" />

            <infrastucture:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <infrastucture:NotEqualsToVisibilityConverter x:Key="NotEqualsToVisibilityConverter"/>
            <system:Int32 x:Key="Zero">0</system:Int32>
            <system:Int32 x:Key="One">1</system:Int32>

            <Style x:Key="FilterListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type ListBox}">

                            <Border x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
          
                        CornerRadius="8" 
                         BorderThickness="4 0 0 0" >

                                <ScrollViewer x:Name="ScrollViewer" 
                                              Margin="4 0 0 0"
            		                            VerticalScrollBarVisibility="Auto"
            		                            HorizontalScrollBarVisibility="Auto"
            		                            CanContentScroll="True"
            		                            Padding="{TemplateBinding Padding}"
            		                            Background="{TemplateBinding Background}" 
            		                            BorderBrush="Transparent" BorderThickness="0" 
            		                            IsTabStop="False">
                                    <ItemsPresenter/>
                                </ScrollViewer>

                            </Border>
                            <ControlTemplate.Triggers>


                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter  Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>



            </Style>
        </ResourceDictionary>
    </Control.Resources>

    <wpf:DialogHost Identifier="{Binding Id}">
        <Grid Margin="4" 
              KeyboardNavigation.TabNavigation="Cycle"
              FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}">
            <ProgressBar
                Visibility="{Binding IsLoading.Value, Converter={StaticResource BooleanToVisibilityConverter}}"
                Style="{StaticResource TailBlazerCircularProgressBar}" 
                MinWidth="75"
                MinHeight="75"
                Value="50"
                IsIndeterminate="True"/>

            <Grid  
            Visibility="{Binding IsLoading.Value, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" 
            Margin="-4 0 -4 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="{Binding  Path=InlineViewerVisible.Value, Mode=TwoWay, Converter={StaticResource c1}}"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{Binding  Path=InlineViewerVisible.Value, Mode=TwoWay, Converter={StaticResource c2}}"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>

                <Grid Margin="0 4 0 4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>


                    <ToggleButton
                      
                                   Margin="2 0 0 0"
                                   Padding="2,2,2,-2"
                                   Width="32" 
                                   IsChecked="{Binding SearchHints.UseRegex}">

                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource  SearchToggleStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SearchHints.IsValid.Value.IsValid}" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource ValidationErrorBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <TextBox Grid.Column="1" 
                            x:Name="SearchTextBox"
                            Text="{Binding SearchHints.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                            wpf:TextFieldAssist.Hint="{Binding SearchHints.IsValid.Value.Message}" 
                            VerticalAlignment="Center"
                          
                            wpf:ValidationAssist.UsePopup="False"
                            Style="{StaticResource FloatingHintAndErrorTextBox}"
                            Validation.ErrorTemplate="{StaticResource BorderOnlyValidationErrorTemplate}" 
                            MinWidth="200">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding SearchHints.AddSearchCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>

                    <TextBlock     
                            Margin="8 0 0 0" 
                            Grid.Column="2"
                            Opacity="0.56"
                            Width="43"
                            TextAlignment="Center"
                            TextWrapping="Wrap"
                            Visibility="{Binding SearchCollection.Count, Converter={StaticResource NotEqualsToVisibilityConverter}, ConverterParameter={StaticResource One}}"
                            VerticalAlignment="Center"
                            Text="Switch Results"/>


                    <ListBox Grid.Column="3" Margin="4 2 0 2" 
                        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                        Background="{DynamicResource MaterialDesignPaper}"
                        VerticalAlignment="Stretch"
                        Visibility="{Binding SearchCollection.Count, Converter={StaticResource NotEqualsToVisibilityConverter}, ConverterParameter={StaticResource One}}"
                        SelectedItem="{Binding SearchCollection.Selected}"
                        ItemsSource="{Binding SearchCollection.Items}" 
                        Style="{DynamicResource FilterListBoxStyle}">

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type searching:SearchViewModel}">
                                <Grid x:Name="Selection" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition  Width="Auto"/>
                                        <ColumnDefinition  Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Margin="4 0 0 0">
                                            <Run FontSize="12"
                                                FontWeight="Bold"
                                                BaselineAlignment="Bottom"
                                                Text="{Binding Text, Mode=OneWay}"/>
                                            <Run BaselineAlignment="Bottom" Text="{Binding  CountText}"/>
                                    </TextBlock>

                                    <ProgressBar  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                            Margin="0 4 0 0"            
                                            Width="{Binding ElementName=Selection, Path=Width}"    
                                            Orientation="Horizontal"
                                            VerticalAlignment="Bottom"
                                            Visibility="{Binding Searching, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Value="{Binding SegmentsSearched}"
                                            Maximum="{Binding Segments}"
                                            Minimum="0"
                                            IsIndeterminate="False"/>


                                    <Button Visibility="{Binding SearchType, Converter={StaticResource EqualityToVisibilityConverter},ConverterParameter={x:Static search:SearchType.User}}"
                                        Grid.Row="0"  Grid.Column="2"
                                        ToolTip="{Binding RemoveTooltip}"
                                        VerticalAlignment="Center"
                                        Command="{Binding RemoveCommand}"
                                        Style="{StaticResource CloseButtonStyle}"/>
                                </Grid>
                            </DataTemplate>

                        </ListBox.ItemTemplate>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource  MaterialDesignListBoxItem}">
                                <Style.Setters>
                                    <Setter Property="Padding" Value="4 0 4 0"/>
                                    <Setter Property="Height" Value="36"/>
                                </Style.Setters>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>


                    <!--</Border>-->

                    <Button Grid.Column="4" 

                        Style="{StaticResource MaterialDesignFlatButton}"
                        Command="{Binding OpenSearchOptionsCommand}"
                        HorizontalAlignment="Left"
                        ToolTip="Search options"
                        Width="24" Height="24"
                        Padding="0"
                        VerticalAlignment="Center">
                        <controls:SettingsIcon  Width="14" Height="14"/>
  
                    </Button>

                    <StackPanel    
                    VerticalAlignment="Center"
                    Grid.Column="5" Margin="4 0 4 0" Orientation="Vertical">

                        <CheckBox HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            IsChecked="{Binding AutoTail}"
                            Margin="4 0 4 0"
                            Content="Follow tail"/>

                        <CheckBox Visibility="{Binding CanViewInline.Value, Converter={StaticResource BooleanToVisibilityConverter}}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            IsChecked="{Binding ShowInline}"
                            Content="Show inline"
                            Margin="4 0 4 0"/>


                    </StackPanel>
                </Grid>

                <ListBox 
                        VerticalAlignment="Stretch"
                        Grid.Row="1"
                        ItemsSource="{Binding Lines}" 
                        SelectedItem="{Binding SelectedItem}"
                        FontFamily="Consolas"
                        SelectionMode="Extended"
                        infrastucture:ListBoxHelper.SelectionMonitor="{Binding SelectionMonitor}">

                    <!--<infrastucture:ListBoxHelper.RowAnimationSetter>
                    <local:ListboxRowAnimationSetter
                        Duration="{Binding HighlightDuration.Value}"
                        IsEnabled="{Binding HighlightTail.Value}">
                    </local:ListboxRowAnimationSetter>
                </infrastucture:ListBoxHelper.RowAnimationSetter>-->

                    <ListBox.Template>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer 
                                        VerticalScrollBarVisibility="Auto"
                                        HorizontalScrollBarVisibility="Auto"
                                        CanContentScroll="True"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="Transparent" 
                                        BorderThickness="0" 
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        IsTabStop="False"
                                        IsHitTestVisible="True">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ListBox.Template>

                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <controls:VirtualScrollPanel ItemHeight="22"
                                                ScrollReceiver="{Binding}"  
                                                StartIndex="{Binding FirstIndex}"
                                                TotalItems="{Binding LatestCount.Value}"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>


                    <ListBox.InputBindings>
                        <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyToClipboardCommand}"/>
                    </ListBox.InputBindings>

                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="_Copy" Command="{Binding CopyToClipboardCommand}">
                                <MenuItem.Icon>
                                    <Viewbox Width="16" Height="16">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" 
                                              Fill="{DynamicResource MaterialDesignBody}" />
                                        </Canvas>
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>

                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type tail:LineProxy}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18"/> 
                                    <ColumnDefinition Width="*"/> 
                                </Grid.ColumnDefinitions>

      
                            <controls:RegexMatchedIcon 
                                                    Margin="4 0 0 0"
                                                    Width="14"
                                                    Height="14"
                                                    VerticalAlignment="Center"
                                                    Visibility="{Binding ShowIndicator.Value, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    Foreground="{StaticResource SecondaryAccentBrush}"/>
                                

                                <controls:HighlightTextControl
                                    Grid.Column="1" Margin="6 0 0 0"   
                                        Text="{Binding Text}" 
                                        VerticalAlignment="Center"
                                        FormattedText = "{Binding FormattedText.Value}"
                                        HighlightForeground = "{StaticResource SecondaryAccentForegroundBrush}"
                                        HighlightBackground = "{StaticResource SecondaryAccentBrush}"/>
                            </Grid>
                            

                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource  MaterialDesignListBoxItem}">
                            <Style.Setters>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Height" Value="22"/>
                            </Style.Setters>

                            <Style.Triggers>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsRecent}" Value="True"/>
                                        <Condition Binding="{Binding Path=DataContext.HighlightTail.Value, ElementName=Control}" Value="True"/>
                                        <Condition Binding="{Binding Path=DataContext.UsingDarkTheme.Value, ElementName=Control}" Value="False"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Background).(SolidColorBrush.Color)" 
                                                                               FromBrush="{StaticResource SecondaryAccentBrush}" 
                                                                               Duration="0:0:5"/>
                                                <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Foreground).(SolidColorBrush.Color)" 
                                                                               ToBrush="{StaticResource SecondaryAccentForegroundBrush}" 
                                                                               Duration="0:0:5"/>
                                            </Storyboard>
                                        </BeginStoryboard>

                                    </MultiDataTrigger.EnterActions>
                                </MultiDataTrigger>

                                <MultiDataTrigger >

                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsRecent}" Value="True"/>
                                        <Condition Binding="{Binding Path=DataContext.HighlightTail.Value, ElementName=Control}" Value="True"/>
                                        <Condition Binding="{Binding Path=DataContext.UsingDarkTheme.Value, ElementName=Control}" Value="True"/>
                                    </MultiDataTrigger.Conditions>

                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Foreground).(SolidColorBrush.Color)" 
                                                                       
                                                                               FromBrush="{StaticResource SecondaryAccentBrush}"
                                                                               Duration="0:0:5"/>
                                            </Storyboard>
                                        </BeginStoryboard>

                                    </MultiDataTrigger.EnterActions>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>

                </ListBox>

                <GridSplitter Grid.Row="2"
                          Height="5" 
                          ResizeDirection="Rows"
                          Visibility="{Binding Path=DataContext.InlineViewerVisible.Value, ElementName=Control,Converter={StaticResource BooleanToVisibilityConverter}}"
                          Background="{StaticResource PrimaryHueMidBrush}"
                          BorderThickness="1" HorizontalAlignment="Stretch"/>

                <local:InlineView 
                    VerticalAlignment="Stretch"
                    Visibility="{Binding Path=DataContext.InlineViewerVisible.Value, ElementName=Control,Converter={StaticResource BooleanToVisibilityConverter}}"
                    DataContext="{Binding InlineViewer}"
                    Grid.Row="3" />

                <Grid    Grid.Row="4"
              Margin = "0 0 0 -4"       
            Background="{StaticResource PrimaryHueMidBrush}">

                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Opacity" Value="0.8"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidForegroundBrush}"/>
                        </Style>
                    </Grid.Resources>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--</>-->

                    <StackPanel Grid.Column="1" Margin="4 2 6 2"
                     Orientation="Horizontal" 
                     Visibility="Collapsed"       
                     HorizontalAlignment="Left">

                        <TextBlock Text="DEBUGGING INFO:"/>

                        <TextBlock  
                        Margin="4 0 0 0"
                        Text="{Binding SelectedItemsCount.Value,StringFormat='\Selected Items={0} '}"
                        VerticalAlignment="Center"/>

                        <TextBlock  
                        Margin="4 0 0 0"
                       Text="{Binding FirstIndex,StringFormat='\First Index={0}'}"
                        VerticalAlignment="Center"/>

                        <TextBlock  
                        Margin="4 0 0 0"
                        Text="{Binding PageSize,StringFormat='\Page Size={0}'}"
                        VerticalAlignment="Center"/>

                    </StackPanel>

                    <StackPanel 
                    Margin="4 2 4 2"
                    Grid.Column="2"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                        <TextBlock  
                        Margin="4 0 0 0"
                        Text="{Binding  CountText.Value, StringFormat='\{0}.'}"
                        VerticalAlignment="Center"/>


                        <TextBlock Margin="6 0 0 0" Text="{Binding FileSizeText.Value}" />
                    </StackPanel>
                </Grid>
            </Grid>

        </Grid>
    </wpf:DialogHost>

</UserControl>
