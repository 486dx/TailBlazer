<Application x:Class="TailBlazer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:TailBlazer.Views"
             xmlns:controls="clr-namespace:TailBlazer.Controls">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/TailBlazer;component/Themes/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
            </ResourceDictionary.MergedDictionaries>



            <DataTemplate DataType="{x:Type views:FileTailerViewModel}">
                <views:FileTailerView />
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type views:FileDropContainer}">
                <Grid TextElement.Foreground="{DynamicResource MaterialDesignBody}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <controls:FileIcon
                            BorderThickness="0"
                            Width="22" 
                            Height="22" 
                            Foreground="{DynamicResource PrimaryHueMidBrush}"/>

                        <ItemsControl Margin="4" Grid.Column="1" ItemsSource="{Binding Files}"/>
                </Grid>
            </DataTemplate>
            <ControlTemplate x:Key="MyToggle" TargetType="{x:Type ToggleButton}">
                <Grid ClipToBounds="True" Clip="{Binding RenderedGeometry, ElementName=UncheckedEllipse}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.23" Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition From="*" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="UncheckedEllipse">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckedEllipse">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckMark">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="CheckMark">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.025" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.025" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualTransition>
                                <VisualTransition From="Checked" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckedEllipse">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="UncheckedEllipse">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="32"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.1" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckMark">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.1" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="CheckMark">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Hidden</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="UncheckedEllipse"/>
                                    <DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckedEllipse"/>
                                    <DoubleAnimation Duration="0" To="24" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckMark"/>
                                    <DoubleAnimation Duration="0" To="24" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="CheckMark"/>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="UncheckedEllipse"/>
                                    <DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckedEllipse"/>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="CheckMark"/>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="CheckMark"/>
                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Hidden</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Indeterminate">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck"/>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Ellipse x:Name="UncheckedEllipse" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Opacity="0.54" Width="{TemplateBinding Width}"/>
                    <Ellipse x:Name="CheckedEllipse" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    <Viewbox x:Name="CheckMark" HorizontalAlignment="Center" Height="24" Visibility="Hidden" VerticalAlignment="Center" Width="24">
                        <Canvas Height="24" Width="24">
                            <Path Data="M21,7L9,19 3.5,13.5 4.91,12.09 9,16.17 19.59,5.59 21,7z" Fill="{TemplateBinding Foreground}"/>
                        </Canvas>
                    </Viewbox>
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Stroke" TargetName="CheckedEllipse">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" Opacity="0.23"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke" TargetName="UncheckedEllipse">
                            <Setter.Value>
                                <SolidColorBrush Color="Black" Opacity="0.23"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
        


    </Application.Resources>
</Application>
