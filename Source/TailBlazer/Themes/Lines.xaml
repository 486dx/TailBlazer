<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tail="clr-namespace:TailBlazer.Views.Tail"
                    xmlns:controls="clr-namespace:TailBlazer.Controls"
                    xmlns:infrastucture="clr-namespace:TailBlazer.Infrastucture">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.listbox.xaml" />


    </ResourceDictionary.MergedDictionaries>


    <DataTemplate DataType="{x:Type tail:LineProxy}">
        <Grid Margin="4 0 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--Status=-->

            <controls:SearchResultIndicator 
                    Padding="2" 
                    Foreground="{DynamicResource SecondaryAccentBrush}"
                    BorderBrush ="{DynamicResource GrayBrush6}"
                    Status="{Binding IndicatorStatus.Value}"                
                    VerticalAlignment="Center"/>
            <!-- <Border>


               <Grid x:Name="Grid" Margin="2" 
                                            Visibility="{Binding  LineMatches.Value.HasMatches, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <controls:TextMatchedIcon 
                                                        Width="14"
                                                        Height="14"
                                                        VerticalAlignment="Center"
                                                        BorderThickness="1"
                                                        BorderBrush ="{DynamicResource GrayBrush6}"
                                                        Visibility="{Binding  LineMatches.Value.IsFilter, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                        Foreground="{StaticResource SecondaryAccentBrush}"/>

                    <controls:RegexMatchedIcon 
                                                        Width="16"
                                                        Height="16"
                                                        Margin ="-2 0 0 0"
                                                        VerticalAlignment="Center"
                                                        BorderThickness="1"
                                                        BorderBrush ="{DynamicResource GrayBrush6}"
                                                        Visibility="{Binding LineMatches.Value.IsRegex, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                        Foreground="{StaticResource SecondaryAccentBrush}"/>
                </Grid>

            </Border> -->

            <controls:HighlightTextControl
                                    Grid.Column="1" Margin="6 0 0 0"   
                                        Text="{Binding Text}" 
                                        VerticalAlignment="Center"
                                        FormattedText = "{Binding FormattedText.Value}"
                                        HighlightForeground = "{StaticResource SecondaryAccentForegroundBrush}"
                                        HighlightBackground = "{StaticResource SecondaryAccentBrush}"/>
        </Grid>





    </DataTemplate>

    <Style x:Key="LinesItemContainerStyle" 
           TargetType="{x:Type ListBoxItem}" 
           BasedOn="{StaticResource  MaterialDesignListBoxItem}">
        <Style.Setters>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="Height" Value="22"/>
            <!--<Setter Property="ToolTip" Value="{Binding  LineMatches.Value.Matches}"/>-->
        </Style.Setters>

        <Style.Triggers>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsRecent}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.HighlightTail.Value, ElementName=Control}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.UsingDarkTheme.Value, ElementName=Control}" Value="False"/>
                </MultiDataTrigger.Conditions>

                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Background).(SolidColorBrush.Color)" 
                                                                               FromBrush="{StaticResource SecondaryAccentBrush}" 
                                                                               Duration="0:0:5"/>
                            <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Foreground).(SolidColorBrush.Color)" 
                                                                               ToBrush="{StaticResource SecondaryAccentForegroundBrush}" 
                                                                               Duration="0:0:5"/>
                        </Storyboard>
                    </BeginStoryboard>

                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>

            <MultiDataTrigger >

                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsRecent}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.HighlightTail.Value, ElementName=Control}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.UsingDarkTheme.Value, ElementName=Control}" Value="True"/>
                </MultiDataTrigger.Conditions>

                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <infrastucture:SolidColorAnimation Storyboard.TargetProperty="(ListBoxItem.Foreground).(SolidColorBrush.Color)" 
                                                                       
                                                                               FromBrush="{StaticResource SecondaryAccentBrush}"
                                                                               Duration="0:0:5"/>
                        </Storyboard>
                    </BeginStoryboard>

                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LinesListBoxStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource MaterialDesignListBox}">
        
        
        <Style.Setters>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource LinesItemContainerStyle}"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ScrollViewer 
                                        VerticalScrollBarVisibility="Auto"
                                        HorizontalScrollBarVisibility="Auto"
                                        CanContentScroll="True"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="Transparent" 
                                        BorderThickness="0" 
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        IsTabStop="True">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
                
            </Setter>
        </Style.Setters>
        
    </Style>


    <DataTemplate x:Key="LinesDataTemplate" DataType="{x:Type tail:ILinesVisualisation}">

        <ListBox ItemsSource="{Binding Lines}" 
                 Style="{StaticResource LinesListBoxStyle}"
                 infrastucture:ListBoxHelper.SelectionMonitor="{Binding SelectionMonitor}" >

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <controls:VirtualScrollPanel ItemHeight="22"
                                                ScrollReceiver="{Binding}"  
                                                StartIndex="{Binding FirstIndex}"
                                                TotalItems="{Binding Count.Value}"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>


            <ListBox.InputBindings>
                <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyToClipboardCommand}"/>
            </ListBox.InputBindings>

            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_Copy" Command="{Binding CopyToClipboardCommand}">
                        <MenuItem.Icon>
                            <Viewbox Width="16" Height="16">
                                <Canvas Width="24" Height="24">
                                    <Path Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" 
                                              Fill="{DynamicResource MaterialDesignBody}" />
                                </Canvas>
                            </Viewbox>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>
    </DataTemplate>

</ResourceDictionary>